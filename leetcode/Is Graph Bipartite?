class Solution {
    public boolean isBipartite(int[][] graph) {
        // 노드 수
        int n = graph.length;
        
        // 노드 별로 가질 수 있는 값은 1 또는 2
        int[] nodes = new int[n];
        
        // 모든 노드에 대해서 bfs
        for(int i = 0; i < n; i++){
            if(nodes[i] == 0)
                nodes[i] = 1;
            else
                continue;
                                    
            Queue<Integer> q = new LinkedList<>();
            q.add(i);
            while(!q.isEmpty()){
                int now = q.remove();
                for(int adj : graph[now]){
                    int nextVal = nodes[now] == 1 ? 2 : 1;
                    if(nodes[adj] != 0){
                        if(nodes[adj] != nextVal)
                             return false;
                        else
                            continue;
                    }
                    nodes[adj] = nextVal;
                    q.add(adj);
                }
            }
        }
        return true;
    }
}
